string = input()
substring = input()
pos = string.find(substring)
while pos != -1:
    print(pos)
    pos = string.find(substring, pos + 1)

"""
Метод rfind работает аналогично find, но ищет самое правое вхождение.

Метод replace(old, new) позволяет заменить все вхождения подстроки old на подстроку new. 
\При этом конструируется новая строка, где были произведены замены. 
Нужно обратить внимание, что метод replace заменяет вхождения подстрок без учета предыдущих совершенных 
замен. Если применить следующую операцию 'AAAAAA'.replace('AA', 'A'), то в результате получится строка 'AAA'
, а не 'A', как можно было бы ожидать.

Фактически, можно считать, что метод replace находит очередное вхождение подстроки old, осуществляет замену 
\и продолжает поиск с позиции после всех замененных символов (без наложения и поиска в свежезамененной части).

Существует модификация replace(old, new, count), которая осуществляет не более count замен самых левых 
вхождений подстроки old.

Также для строк существует метод count, который позволяет подсчитать количество вхождений подстроки.
 По аналогии с методом find определены методы count с двумя и тремя параметрами.
"""